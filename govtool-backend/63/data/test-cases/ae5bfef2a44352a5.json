{"uid":"ae5bfef2a44352a5","name":"test_drep_voting_power[registered_drep0]","fullName":"test_cases.test_drep#test_drep_voting_power","historyId":"e2be534c45d7103963d2a30ca95c247e","time":{"start":1732009927827,"stop":1732009928000,"duration":173},"status":"failed","statusMessage":"AssertionError: Expected GET/drep/get-voting-power to succeed but got statusCode:500 : body:Something went wrong","statusTrace":"govtool_api = <lib.govtool_api.GovToolApi object at 0x7f02a5c614d0>\nregistered_drep = {'drepId': '375b338d59ab303f07d594fb7b8346aa650704fcdfc84b186974b2af', 'metadataHash': '1111111111111111111111111111111111111111111111111111111111111111', 'url': 'https://bit.ly/3zCH2HL'}\n\n    @allure.story(\"Drep\")\n    def test_drep_voting_power(govtool_api, registered_drep):\n>       response = govtool_api.drep_get_voting_power(registered_drep[\"drepId\"])\n\ntest_cases/test_drep.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/govtool_api.py:73: in drep_get_voting_power\n    return self.__get(\"/drep/get-voting-power\", drep_id)\nlib/govtool_api.py:58: in __get\n    return self.__request(\"GET\", endpoint, param)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.govtool_api.GovToolApi object at 0x7f02a5c614d0>, method = 'GET'\nendpoint = '/drep/get-voting-power'\nparam = '375b338d59ab303f07d594fb7b8346aa650704fcdfc84b186974b2af', body = None\n\n    def __request(self, method: str, endpoint: str, param: Any | None = None, body: Any | None = None) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else \"/\" + endpoint\n        full_url = self._base_url + endpoint\n        full_url = full_url + \"/\" + param if param else full_url\n        start_time = int(time.time() * 1000000)\n    \n        response = self._session.request(method, full_url, json=body)\n    \n        end_time = int(time.time() * 1000000)\n        response_time = end_time - start_time\n    \n        try:\n            response_json = json.dumps(response.json())\n            response_json_str = response_json[:200]\n        except:\n            response_json_str = \"Something went wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n            \"response_time\": response_time,\n            \"start_date\": int(start_time),\n            \"build_id\": BUILD_ID,\n        }\n    \n        self.requests_log.append(request_info)\n    \n        assert (\n>           200 >= response.status_code <= 299\n        ), f\"Expected {method}{endpoint} to succeed but got statusCode:{response.status_code} : body:{response.text}\"\nE       AssertionError: Expected GET/drep/get-voting-power to succeed but got statusCode:500 : body:Something went wrong\n\nlib/govtool_api.py:53: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"govtool_api","time":{"start":1732009926051,"stop":1732009926051,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"registered_drep","time":{"start":1732009927654,"stop":1732009927654,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"registered_drep::0","time":{"start":1732009928227,"stop":1732009928227,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"govtool_api::0","time":{"start":1732009995937,"stop":1732009995937,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Drep"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_drep"},{"name":"host","value":"fv-az1272-19"},{"name":"thread","value":"1779-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_drep"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"registered_drep","value":"{'drepId': '375b338d59ab303f07d594fb7b8346aa650704fcdfc84b186974b2af', 'url': 'https://bit.ly/3zCH2HL', 'metadataHash': '1111111111111111111111111111111111111111111111111111111111111111'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":62,"unknown":0,"total":63},"items":[{"uid":"d1e48bf34e87262d","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/62//#testresult/d1e48bf34e87262d","status":"passed","time":{"start":1732003561956,"stop":1732003562123,"duration":167}},{"uid":"1bfe1c59e226fb5d","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/61//#testresult/1bfe1c59e226fb5d","status":"passed","time":{"start":1730994108785,"stop":1730994108951,"duration":166}},{"uid":"ab1c7e27b131deec","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/60//#testresult/ab1c7e27b131deec","status":"passed","time":{"start":1730737529762,"stop":1730737529942,"duration":180}},{"uid":"e037adca7862ba6a","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/59//#testresult/e037adca7862ba6a","status":"passed","time":{"start":1730459889706,"stop":1730459889861,"duration":155}},{"uid":"ce9732a973184fbf","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/58//#testresult/ce9732a973184fbf","status":"passed","time":{"start":1730396888680,"stop":1730396888792,"duration":112}},{"uid":"7341ae8bc04171b6","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/57//#testresult/7341ae8bc04171b6","status":"passed","time":{"start":1730368207903,"stop":1730368208000,"duration":97}},{"uid":"ba861749ef626be7","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/56//#testresult/ba861749ef626be7","status":"passed","time":{"start":1730213450919,"stop":1730213451017,"duration":98}},{"uid":"99bb7874b2a58ec0","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/55//#testresult/99bb7874b2a58ec0","status":"passed","time":{"start":1730213110310,"stop":1730213110409,"duration":99}},{"uid":"6d248e8737754a17","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/54//#testresult/6d248e8737754a17","status":"passed","time":{"start":1730197233714,"stop":1730197233911,"duration":197}},{"uid":"31b4bef565c6cfff","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/53//#testresult/31b4bef565c6cfff","status":"passed","time":{"start":1730128834157,"stop":1730128834259,"duration":102}},{"uid":"d64f1a0961e726e8","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/52//#testresult/d64f1a0961e726e8","status":"passed","time":{"start":1729809162013,"stop":1729809162113,"duration":100}},{"uid":"40478fb6237d32ea","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/51//#testresult/40478fb6237d32ea","status":"passed","time":{"start":1729781849809,"stop":1729781849913,"duration":104}},{"uid":"fcd58451fde9a4cf","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/50//#testresult/fcd58451fde9a4cf","status":"passed","time":{"start":1729772689994,"stop":1729772690171,"duration":177}},{"uid":"384bc39c72b2139d","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/49//#testresult/384bc39c72b2139d","status":"passed","time":{"start":1729764898782,"stop":1729764898874,"duration":92}},{"uid":"c8fad29d1fee5d7b","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/48//#testresult/c8fad29d1fee5d7b","status":"passed","time":{"start":1729674868157,"stop":1729674868311,"duration":154}},{"uid":"adf03f9fdde0681e","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/47//#testresult/adf03f9fdde0681e","status":"passed","time":{"start":1729575418412,"stop":1729575418515,"duration":103}},{"uid":"cc3df9d1dd821865","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/46//#testresult/cc3df9d1dd821865","status":"passed","time":{"start":1729151460190,"stop":1729151460281,"duration":91}},{"uid":"bda533daefde479d","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/45//#testresult/bda533daefde479d","status":"passed","time":{"start":1729082266480,"stop":1729082266576,"duration":96}},{"uid":"e639177014677633","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/44//#testresult/e639177014677633","status":"passed","time":{"start":1729000643745,"stop":1729000643845,"duration":100}},{"uid":"8e31c19b0857973f","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/43//#testresult/8e31c19b0857973f","status":"passed","time":{"start":1728986743634,"stop":1728986743788,"duration":154}}]},"tags":[]},"source":"ae5bfef2a44352a5.json","parameterValues":["{'drepId': '375b338d59ab303f07d594fb7b8346aa650704fcdfc84b186974b2af', 'url': 'https://bit.ly/3zCH2HL', 'metadataHash': '1111111111111111111111111111111111111111111111111111111111111111'}"]}