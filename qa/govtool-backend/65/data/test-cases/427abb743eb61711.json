{"uid":"427abb743eb61711","name":"test_drep_voting_power[registered_drep1]","fullName":"test_cases.test_drep#test_drep_voting_power","historyId":"d6165a1ab2ad7f16970a3c6aefe0a766","time":{"start":1732643082087,"stop":1732643082421,"duration":334},"status":"failed","statusMessage":"AssertionError: Expected GET/drep/get-voting-power to succeed but got statusCode:500 : body:Something went wrong","statusTrace":"govtool_api = <lib.govtool_api.GovToolApi object at 0x7f5d3c52a310>\nregistered_drep = {'drepId': 'ecaad9d12e9af29bc4c62769a824be0bfbe82460e879c047f61d5dd3', 'metadataHash': '1111111111111111111111111111111111111111111111111111111111111111', 'url': 'https://bit.ly/3zCH2HL'}\n\n    @allure.story(\"Drep\")\n    def test_drep_voting_power(govtool_api, registered_drep):\n>       response = govtool_api.drep_get_voting_power(registered_drep[\"drepId\"])\n\ntest_cases/test_drep.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/govtool_api.py:73: in drep_get_voting_power\n    return self.__get(\"/drep/get-voting-power\", drep_id)\nlib/govtool_api.py:58: in __get\n    return self.__request(\"GET\", endpoint, param)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.govtool_api.GovToolApi object at 0x7f5d3c52a310>, method = 'GET'\nendpoint = '/drep/get-voting-power'\nparam = 'ecaad9d12e9af29bc4c62769a824be0bfbe82460e879c047f61d5dd3', body = None\n\n    def __request(self, method: str, endpoint: str, param: Any | None = None, body: Any | None = None) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else \"/\" + endpoint\n        full_url = self._base_url + endpoint\n        full_url = full_url + \"/\" + param if param else full_url\n        start_time = int(time.time() * 1000000)\n    \n        response = self._session.request(method, full_url, json=body)\n    \n        end_time = int(time.time() * 1000000)\n        response_time = end_time - start_time\n    \n        try:\n            response_json = json.dumps(response.json())\n            response_json_str = response_json[:200]\n        except:\n            response_json_str = \"Something went wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n            \"response_time\": response_time,\n            \"start_date\": int(start_time),\n            \"build_id\": BUILD_ID,\n        }\n    \n        self.requests_log.append(request_info)\n    \n        assert (\n>           200 >= response.status_code <= 299\n        ), f\"Expected {method}{endpoint} to succeed but got statusCode:{response.status_code} : body:{response.text}\"\nE       AssertionError: Expected GET/drep/get-voting-power to succeed but got statusCode:500 : body:Something went wrong\n\nlib/govtool_api.py:53: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"govtool_api","time":{"start":1732643078449,"stop":1732643078449,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"registered_drep","time":{"start":1732643081946,"stop":1732643081946,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"registered_drep::0","time":{"start":1732643082607,"stop":1732643082607,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"govtool_api::0","time":{"start":1732643090043,"stop":1732643090043,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Drep"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_drep"},{"name":"host","value":"fv-az566-8"},{"name":"thread","value":"1785-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_drep"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"registered_drep","value":"{'drepId': 'ecaad9d12e9af29bc4c62769a824be0bfbe82460e879c047f61d5dd3', 'url': 'https://bit.ly/3zCH2HL', 'metadataHash': '1111111111111111111111111111111111111111111111111111111111111111'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":62,"unknown":0,"total":65},"items":[{"uid":"c9d6930522d45c52","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/64//#testresult/c9d6930522d45c52","status":"failed","statusDetails":"AssertionError: Expected GET/drep/get-voting-power to succeed but got statusCode:500 : body:Something went wrong","time":{"start":1732624813537,"stop":1732624813893,"duration":356}},{"uid":"ed6eadb6e8d71862","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/63//#testresult/ed6eadb6e8d71862","status":"failed","statusDetails":"AssertionError: Expected GET/drep/get-voting-power to succeed but got statusCode:500 : body:Something went wrong","time":{"start":1732009928395,"stop":1732009928566,"duration":171}},{"uid":"f5d3bed0c6bd94ce","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/62//#testresult/f5d3bed0c6bd94ce","status":"passed","time":{"start":1732003562475,"stop":1732003562640,"duration":165}},{"uid":"c83df664e6e216bf","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/61//#testresult/c83df664e6e216bf","status":"passed","time":{"start":1730994109291,"stop":1730994109455,"duration":164}},{"uid":"23c83ad31408aad3","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/60//#testresult/23c83ad31408aad3","status":"passed","time":{"start":1730737530306,"stop":1730737530481,"duration":175}},{"uid":"5f962462b7e413c","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/59//#testresult/5f962462b7e413c","status":"passed","time":{"start":1730459890185,"stop":1730459890341,"duration":156}},{"uid":"2f04c18d1a372c53","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/58//#testresult/2f04c18d1a372c53","status":"passed","time":{"start":1730396889042,"stop":1730396889150,"duration":108}},{"uid":"72debf5eaeb69f07","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/57//#testresult/72debf5eaeb69f07","status":"passed","time":{"start":1730368208228,"stop":1730368208325,"duration":97}},{"uid":"954c9da7e4ee2c32","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/56//#testresult/954c9da7e4ee2c32","status":"passed","time":{"start":1730213451241,"stop":1730213451335,"duration":94}},{"uid":"2d9a41a6c230c04d","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/55//#testresult/2d9a41a6c230c04d","status":"passed","time":{"start":1730213110634,"stop":1730213110724,"duration":90}},{"uid":"9922ae1cc8a6195d","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/54//#testresult/9922ae1cc8a6195d","status":"passed","time":{"start":1730197234282,"stop":1730197234465,"duration":183}},{"uid":"32005e03d3586c41","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/53//#testresult/32005e03d3586c41","status":"passed","time":{"start":1730128834488,"stop":1730128834592,"duration":104}},{"uid":"6689095cc73180d7","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/52//#testresult/6689095cc73180d7","status":"passed","time":{"start":1729809162335,"stop":1729809162436,"duration":101}},{"uid":"688b69648123004b","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/51//#testresult/688b69648123004b","status":"passed","time":{"start":1729781850175,"stop":1729781850292,"duration":117}},{"uid":"ebfb9d4dbf4b560","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/50//#testresult/ebfb9d4dbf4b560","status":"passed","time":{"start":1729772690546,"stop":1729772690713,"duration":167}},{"uid":"d6c5c7407863ea57","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/49//#testresult/d6c5c7407863ea57","status":"passed","time":{"start":1729764899116,"stop":1729764899207,"duration":91}},{"uid":"c5257cbef7e4d08b","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/48//#testresult/c5257cbef7e4d08b","status":"passed","time":{"start":1729674868646,"stop":1729674868793,"duration":147}},{"uid":"7fd838e481e9f31","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/47//#testresult/7fd838e481e9f31","status":"passed","time":{"start":1729575418746,"stop":1729575418848,"duration":102}},{"uid":"de229eb70efb560d","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/46//#testresult/de229eb70efb560d","status":"passed","time":{"start":1729151460503,"stop":1729151460593,"duration":90}},{"uid":"e44c551deff37915","reportUrl":"https://IntersectMBO.github.io/govtool-test-reports/govtool-backend/45//#testresult/e44c551deff37915","status":"passed","time":{"start":1729082266802,"stop":1729082266897,"duration":95}}]},"tags":[]},"source":"427abb743eb61711.json","parameterValues":["{'drepId': 'ecaad9d12e9af29bc4c62769a824be0bfbe82460e879c047f61d5dd3', 'url': 'https://bit.ly/3zCH2HL', 'metadataHash': '1111111111111111111111111111111111111111111111111111111111111111'}"]}